#ifndef JUGADOR2_H
#define JUGADOR2_H
#include"mapas.h"
#include <iostream>
#include<cctype>
#include<Windows.h>
#include<thread>
#include<chrono>
#include<conio.h>
#include"juego.h"

using namespace System;
class Jugador2 {
public:
    int x, y;
    int vida = 10;
    int recolectados = 0;

    Jugador2(int startX, int startY) : x(startX), y(startY) {}

    void dibujar() {
        Console::ForegroundColor = ConsoleColor::Blue;
        Console::SetCursorPosition(x, y);
        std::cout << "O";
    }

    void mostrarVida() {
        Console::ForegroundColor = ConsoleColor::DarkRed;
        Console::SetCursorPosition(99, 24);
        std::cout << "Vida: " << vida << " <3";
    }

    void perderVida() {
        if (vida > 0) {
            vida--;
            mostrarVida();
        }

        if (vida == 0) {
            system("CLS");
            int matriz[29][120] =  { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0},
{0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,2,2,2,0,0,0,0},
{0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0},
{0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0},
{0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0},
{0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0},
{0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0},
{0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,2,2,0,0,0,0,0,2,2,2,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,2,0,2,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,2,2,0,2,2,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,2,2,0,2,2,2,2,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,2,0,0,2,2,0,0,0,0,0,0,0,0,2,0,2,2,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,2,2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,2,2,0,2,2,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,2,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,2,2,2,2,0,0,2,2,0,0,0,0,0,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,2,2,2,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,2,2,2,0,0,2,2,2,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

            for (int i = 0; i < 29; i++) {
                for (int j = 0; j < 120; j++) {
                    switch (matriz[i][j]) {
                    case 0: Console::ForegroundColor = ConsoleColor::White; break;
                    case 1: Console::ForegroundColor = ConsoleColor::Gray; break;
                    case 2: Console::ForegroundColor = ConsoleColor::Black; break;
                    case 3: Console::ForegroundColor = ConsoleColor::Black; break;
                    case 4: Console::ForegroundColor = ConsoleColor::DarkGray; break;
                    case 5: Console::ForegroundColor = ConsoleColor::White; break;
                    case 6: Console::ForegroundColor = ConsoleColor::Black; break;
                    case 7: Console::ForegroundColor = ConsoleColor::Green; break;
                    case 8: Console::ForegroundColor = ConsoleColor::Blue; break;
                    case 9: Console::ForegroundColor = ConsoleColor::Yellow; break;
                    }
                    std::cout << char(219);
                }
                std::cout << std::endl;
            }
            Sleep(4000);
            exit(0);
        }
    }

    void mover() {
        int matriz[29][120] = {
{3,3,3,3,3,3,3,2,6,2,4,1,1,1,1,1,8,1,6,5,8,5,5,5,5,2,1,1,1,1,1,1,1,1,1,1,4,2,6,2,4,2,1,8,1,8,1,8,1,2,6,5,5,2,5,5,1,8,1,1,1,1,6,2,6,2,4,2,6,2,4,1,1,1,1,8,1,5,8,5,5,5,5,5,5,6,1,8,1,6,1,8,1,5,5,5,4,2,6,2,4,5,8,5,5,5,5,8,5,1,1,1,1,1,1,8,1,2,10,6},
{3,3,3,3,3,3,3,6,2,6,4,1,8,1,8,1,8,1,2,5,8,5,5,8,5,6,1,8,8,1,8,8,1,8,8,1,4,6,2,6,4,6,1,8,1,8,1,8,1,6,5,8,5,5,8,5,1,8,1,8,8,1,2,6,2,6,4,6,2,6,4,1,8,8,1,8,1,5,8,5,8,5,8,8,5,6,1,8,1,1,1,8,1,5,8,5,4,6,2,6,4,5,8,5,8,8,5,8,5,1,8,1,8,8,1,8,1,6,6,6},
{3,3,3,3,3,3,3,2,6,2,4,1,1,1,1,1,1,1,6,5,5,5,5,5,5,2,1,1,1,1,1,1,1,1,1,1,4,2,6,2,4,2,1,1,1,1,1,1,1,2,5,5,5,5,5,5,1,1,1,1,1,1,6,2,6,2,4,2,6,2,4,1,1,1,1,1,1,5,5,5,5,5,5,5,5,6,1,1,1,1,1,1,1,5,5,5,4,2,6,2,4,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,2,6,2},
{3,3,3,3,3,3,3,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9},
{6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2},
{2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6},
{6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2},
{4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,9,9,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{1,1,1,2,6,2,4,2,6,2,9,2,6,2,6,2,6,2,6,2,6,2,6,1,8,8,1,5,5,5,2,6,2,6,2,6,4,2,6,2,4,2,6,1,1,2,6,2,6,2,6,1,1,1,1,1,1,1,6,2,6,2,6,2,6,2,4,2,6,2,4,2,6,1,1,1,1,1,1,1,6,2,6,6,6,6,6,5,5,5,6,6,6,6,6,6,4,2,6,2,4,1,1,1,1,1,1,1,1,2,6,2,6,5,5,5,5,5,2,6},
{1,8,1,6,2,6,4,6,2,6,9,6,2,6,2,6,2,6,2,6,2,6,2,1,1,1,1,5,8,5,6,2,6,2,6,2,4,6,2,6,4,6,6,1,1,6,2,6,11,6,2,1,8,8,1,8,8,1,2,6,2,6,2,6,2,6,4,6,2,6,4,6,1,8,8,8,1,8,8,1,2,6,5,5,5,5,5,5,8,5,5,5,5,6,11,6,4,6,2,6,4,1,8,1,8,1,8,1,1,1,1,1,2,5,8,5,8,5,5,5},
{1,1,1,2,6,1,4,2,6,2,4,2,5,5,6,6,10,2,5,2,6,5,6,1,8,8,1,5,5,5,5,5,5,5,5,6,4,2,6,2,4,2,1,1,1,2,6,6,6,2,6,1,8,8,1,8,8,1,6,1,6,2,6,2,6,2,4,2,6,2,4,2,1,1,1,1,1,1,1,1,6,2,5,8,8,5,8,5,8,5,8,8,5,6,6,6,4,2,6,2,4,1,8,1,8,1,8,1,1,8,8,1,6,5,8,5,8,5,8,5},
{1,8,1,1,1,1,4,6,2,6,4,5,8,8,5,6,6,6,5,5,2,5,5,1,1,1,1,5,8,5,8,8,5,8,5,2,4,6,2,6,4,6,1,8,1,5,5,5,5,5,2,1,1,1,1,1,1,1,2,1,1,6,1,6,2,6,4,6,2,6,9,6,6,6,7,6,2,5,5,5,2,6,5,5,5,5,5,5,5,5,5,5,5,6,6,6,4,6,2,6,4,1,1,1,1,1,1,1,1,1,1,1,2,5,5,5,5,5,5,5},
{1,1,1,8,8,1,4,2,6,2,4,5,5,5,5,2,1,2,5,5,5,5,5,5,5,6,2,5,8,5,8,8,5,8,5,6,4,2,6,2,4,2,1,8,1,5,8,5,8,5,6,5,6,2,6,2,6,2,6,1,1,1,1,1,1,2,4,2,6,2,9,2,6,6,6,2,6,5,8,5,6,6,6,6,6,6,6,6,6,6,6,6,1,1,1,1,4,2,6,2,4,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2},
{1,1,1,1,1,1,4,6,2,6,4,5,8,8,5,1,1,1,5,8,8,5,8,8,5,2,6,5,5,5,5,5,5,5,5,2,4,6,2,6,4,6,1,1,1,5,8,5,8,5,5,8,5,6,2,6,2,6,2,1,8,1,8,1,1,1,4,6,2,6,4,6,1,1,1,6,2,5,8,5,5,5,5,6,1,1,1,1,6,6,6,6,1,8,8,1,4,6,2,6,4,6,2,6,2,6,2,6,2,1,1,1,1,6,2,6,7,6,6,6},
{5,2,6,5,6,2,4,2,6,2,4,5,5,5,5,1,8,1,5,5,5,5,5,5,5,1,1,6,6,6,2,6,1,6,2,6,4,2,6,2,4,2,1,1,1,5,5,5,5,5,5,8,5,2,6,5,5,2,6,1,8,1,8,1,8,1,4,2,6,2,4,2,1,8,1,2,6,5,8,5,5,8,5,6,1,8,8,1,6,6,6,6,1,1,1,1,4,2,6,2,4,5,5,5,6,2,5,5,5,1,8,8,1,2,6,2,6,6,6,2},
{5,5,5,5,5,5,4,6,2,6,4,5,5,5,5,1,1,1,2,6,2,1,1,1,1,1,1,2,7,6,6,1,8,1,6,2,4,6,2,6,4,6,2,6,2,6,1,1,1,6,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,4,6,2,6,4,6,1,8,1,6,2,5,5,5,5,8,5,6,1,1,1,1,6,6,6,6,1,8,8,1,4,6,2,6,4,5,8,5,2,6,5,8,5,1,1,1,1,1,1,1,1,1,2,6},
{8,5,8,5,8,5,4,2,6,2,4,1,1,1,1,1,8,1,6,2,6,1,8,8,1,8,1,6,2,6,1,1,1,1,1,6,4,2,6,2,4,2,6,1,1,1,1,8,1,2,5,8,5,5,8,8,5,8,5,2,6,2,6,2,6,2,4,2,6,2,4,2,1,1,1,1,1,1,1,1,5,5,5,6,1,8,8,1,1,1,1,1,1,1,1,1,4,2,6,2,4,5,8,5,5,5,5,8,5,1,8,8,1,8,1,8,8,1,6,2},
{8,5,8,5,8,5,4,6,2,6,4,1,8,8,1,1,1,1,2,6,2,1,8,8,1,8,1,2,6,2,1,8,1,8,1,2,4,6,2,6,4,6,2,1,8,8,1,8,1,6,5,8,5,5,8,8,5,8,5,6,10,6,2,6,2,6,4,6,2,6,4,6,1,8,1,8,8,1,8,1,5,8,5,6,1,1,1,1,8,1,8,8,1,8,8,1,4,6,2,6,4,5,8,5,8,8,5,8,5,1,1,1,1,8,1,8,8,1,2,6},
{5,5,5,5,5,5,4,2,6,2,4,1,1,1,1,1,1,1,6,2,6,1,1,1,1,1,1,6,2,6,1,1,1,1,1,6,4,2,6,2,4,2,6,1,1,1,1,1,1,2,5,5,5,5,5,5,5,5,5,2,6,6,6,2,6,2,4,2,6,2,4,2,1,1,1,1,1,1,1,1,5,5,5,6,1,1,1,1,1,1,1,1,1,1,1,1,4,2,6,2,4,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,6,2},
{4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9,9,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,2,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9},
{6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2},
{2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6},
{6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2},
{2,6,2,6,6,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6,2,6},
{4,4,4,4,4,4,4,2,6,2,4,4,4,4,4,4,4,9,9,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,6,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9,9,4,2,6,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,6,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{2,6,2,1,1,6,4,6,2,6,4,6,2,6,2,6,5,6,2,6,2,1,1,1,1,1,1,1,2,6,2,6,2,5,5,6,4,6,2,6,4,6,5,6,2,5,2,6,2,6,1,1,2,6,2,5,5,5,5,6,2,1,2,6,2,6,4,6,2,6,4,2,6,2,6,2,6,2,1,1,1,1,1,6,5,5,5,6,5,5,5,6,6,6,6,6,4,6,2,6,4,1,2,6,1,6,2,6,2,6,2,5,5,5,2,5,5,5,6,2},
{1,1,1,1,1,1,4,2,6,2,4,5,5,5,5,5,5,2,6,2,6,1,8,1,8,1,8,1,6,5,5,5,5,5,5,6,4,2,6,2,4,2,5,5,6,5,5,2,6,2,1,1,1,1,1,5,8,8,5,1,1,1,6,2,6,2,4,2,6,2,4,6,1,1,1,1,1,1,1,8,1,8,1,2,5,8,5,6,5,8,5,5,5,5,5,6,4,2,6,2,4,1,1,1,1,1,1,1,6,2,6,5,8,5,6,5,8,5,2,6},
{1,8,8,1,8,1,4,6,2,6,4,5,8,5,8,8,5,6,11,6,2,1,8,1,8,1,8,1,2,5,8,8,5,8,5,6,4,6,2,6,4,5,8,8,5,8,8,5,5,6,1,8,1,8,1,5,5,5,5,1,8,1,2,7,6,6,4,6,2,6,4,2,1,8,8,1,8,8,1,8,1,8,1,6,5,8,5,5,5,8,5,8,5,8,5,6,4,6,2,6,4,1,8,1,8,1,8,8,1,6,2,5,8,5,5,5,8,5,6,2},
{1,1,1,1,1,1,4,2,6,2,4,5,5,5,5,5,5,2,6,6,6,1,1,1,1,1,1,1,6,5,5,5,5,5,5,6,4,2,6,2,4,5,5,5,5,5,5,5,5,2,1,1,1,1,1,5,5,5,5,1,1,1,6,6,6,2,4,2,6,2,4,6,1,1,1,1,1,1,1,1,1,1,1,2,5,5,5,5,5,5,5,5,5,5,5,6,4,2,6,2,4,1,1,1,1,1,1,1,1,2,6,5,5,5,5,5,5,5,2,6}
        };
        if (_kbhit()) {
            char tecla = _getch();
            int nuevoX = x, nuevoY = y;

            switch (tecla) {
            case 72: nuevoY--; break;
            case 80: nuevoY++; break;
            case 75: nuevoX--; break;
            case 77: nuevoX++; break;
            }

            if (nuevoX >= 0 && nuevoX < 120 && nuevoY >= 0 && nuevoY < 29) {
                if (matriz[nuevoY][nuevoX] == 7 || matriz[nuevoY][nuevoX] == 10 || matriz[nuevoY][nuevoX] == 11) {
                    recolectados++;
                    matriz[nuevoY][nuevoX] = 0;
                    Console::ForegroundColor = ConsoleColor::DarkCyan;
                    Console::SetCursorPosition(99,25);
                    std::cout << "Recolectados: " << recolectados << "/10";

                    if (recolectados == 10) {
                        system("CLS");
                        Console::SetCursorPosition(50, 15);
                        Console::ForegroundColor = ConsoleColor::Yellow;
                        
                        Sleep(3000);
                        return;
                    }
                }

                if (matriz[nuevoY][nuevoX] != 1 && matriz[nuevoY][nuevoX] != 4 && matriz[nuevoY][nuevoX] != 5) {
                    Console::SetCursorPosition(x, y);

                    switch (matriz[y][x]) {
                    case 0: Console::ForegroundColor = ConsoleColor::White; break;
                    case 2: Console::ForegroundColor = ConsoleColor::Black; break;
                    case 3: Console::ForegroundColor = ConsoleColor::Black; break;
                    case 4: Console::ForegroundColor = ConsoleColor::DarkGray; break;
                    case 6: Console::ForegroundColor = ConsoleColor::Black; break;
                    case 8: Console::ForegroundColor = ConsoleColor::Blue; break;
                    case 9: Console::ForegroundColor = ConsoleColor::Yellow; break;
                    }
                    std::cout << char(219);

                    x = nuevoX;
                    y = nuevoY;

                    dibujar();
                }
            }
        }
    }
};
#endif // !DEBORADOR_H

